#!/usr/bin/env python3
import sys
sys.path.append('../')
sys.path.append('./')
import argparse
import os
import pkg_resources
sys.path.append('../')
sys.path.append('./')
from galru.Galru import Galru

version = ''
try:
	version = pkg_resources.get_distribution("galru").version
except pkg_resources.DistributionNotFound:
	version = 'x.y.z'

parser = argparse.ArgumentParser(
	description = 'Identify CRISPR types from uncorrected long reads',
	usage = 'galru [options] database uncorrected_long_reads.fastq',
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    
parser.add_argument('genus',  help='Genus name, use galru_genera to see all available', type=str)
parser.add_argument('input_file', help='Input FASTQ file of uncorrected long reads (optionally gzipped)', nargs='+', type=str)

# Input
parser.add_argument('--db_dir', '-d',  help='Base directory for species databases, defaults to bundled', type=str )
parser.add_argument('--cas_fasta', '-c',  help='Cas gene FASTA file (optionally gzipped), defaults to bundled', type=str )
parser.add_argument('--threads', '-t',  help='No. of threads to use', type=int, default=1)
parser.add_argument('--technology', '-y',  help='Sequencing technology', type=str, default='map-ont', choices=['map-ont','map-pb', 'ava-pb', 'ava-ont'])

# Output
parser.add_argument('--output_file', '-o',  help='Output filename, defaults to STDOUT', type=str)

# Advanced
parser.add_argument('--verbose', '-v', action='store_true', help='Turn on debugging', default = False)
parser.add_argument('--version', action='version', version=str(version))

options = parser.parse_args()

if options.verbose:
    import cProfile, pstats, io
    pr = cProfile.Profile()
    pr.enable()
    
    g = Galru(options)
    g.run()
    
    pr.disable()
    s = io.StringIO()
    sortby = 'cumulative'
    ps = pstats.Stats(pr, stream=s).sort_stats(sortby)
    ps.print_stats()
    print(s.getvalue())
else:
    g = Galru(options) 
    g.run()
